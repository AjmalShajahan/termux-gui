syntax = "proto3";

option java_package = "com.termux.gui.protocol.protobuf.v0";

// Types used by multiple messages

message Configuration {
  bool darkMode = 2;
  string country = 3;
  string language = 4;
  enum Orientation {
    portrait = 0;
    landscape = 1;
  }
  Orientation orientation = 5;
  bool keyboardHidden = 6;
  int32 screenWidth = 7;
  int32 screenHeight = 8;
  float fontscale = 9;
  float density = 10;
}

message Create {
  string aid = 1;
  int32 parent = 2;
}









// Request and response types



// Activity, Task and global methods

message NewActivityRequest {
  string tid = 1;
  enum ActivityType {
    normal = 0;
    dialog = 1;
    dialogCancelOutside = 2;
    pip = 3;
    lockscreen = 4;
    overlay = 5;
  }
  ActivityType type = 2;
}

message NewActivityResponse {
  string aid = 1;
  string tid = 2;
}


message FinishActivityRequest {
  string aid = 1;
}

message FinishActivityResponse {
  bool success = 1;
}


message FinishTaskRequest {
  string tid = 1;
}
message FinishTaskResponse {
  bool success = 1;
}


message BringTaskToFrontRequest {
  string tid = 1;
}

message BringTaskToFrontResponse {
  bool success = 1;
}


message MoveTaskToBackRequest {
  string aid = 1;
}

message MoveTaskToBackResponse {
  bool success = 1;
}


message SetThemeRequest {
  string aid = 1;
  uint32 statusBarColor = 2;
  uint32 colorPrimary = 3;
  uint32 windowBackground = 4;
  uint32 textColor = 5;
  uint32 colorAccent = 6;
}

message SetThemeResponse {
  bool success = 1;
}


message SetTaskDescriptionRequest {
  string aid = 1;
  bytes img = 2;
  string label = 3;
}

message SetTaskDescriptionResponse {
  bool success = 1;
}


message SetPiPParamsRequest {
  string aid = 1;
  uint32 num = 2;
  uint32 den = 3;
}

message SetPiPParamsResponse {
  bool success = 1;
}


message SetInputModeRequest {
  string aid = 1;
  enum InputMode {
    pan = 0;
    resize = 1;
  }
  InputMode mode = 2;
}

message SetInputModeResponse {
  bool success = 1;
}


message SetPiPModeRequest {
  string aid = 1;
  bool pip = 2;
}

message SetPiPModeResponse {
  bool success = 1;
}


message SetPiPModeAutoRequest {
  string aid = 1;
  bool pip = 2;
}

message SetPiPModeAutoResponse {
  bool success = 1;
}


message ToastRequest {
  string text = 1;
  bool long = 2;
}

message ToastResponse {
  bool success = 1;
}


message KeepScreenOnRequest {
  string aid = 1;
  bool on = 2;
}

message KeepScreenOnResponse {
  bool success = 1;
}


message SetOrientationRequest {
  string aid = 1;
  enum Orientation {
      unspecified = 0;
      behind = 1;
      fullSensor = 2;
      fullUser = 3;
      landscape = 4;
      locked = 5;
      nosensor = 6;
      portrait = 7;
      reverseLandscape = 8;
      reversePortrait = 9;
      sensor = 10;
      sensorLandscape = 11;
      sensorPortrait = 12;
      user = 13;
      userLandscape = 14;
      userPortrait = 15;
  }
  Orientation orientation = 2;
}

message SetOrientationResponse {
  bool success = 1;
}


message SetPositionRequest {
  string aid = 1;
  uint32 x = 2;
  uint32 y = 3;
}

message SetPositionResponse {
  bool success = 1;
}


message GetConfigurationRequest {
  string aid = 1;
}

message GetConfigurationResponse {
  bool success = 1;
  Configuration configuration = 2;
}


message TurnScreenOnRequest {
  
}

message TurnScreenOnResponse {
  bool success = 1;
}


message IsLockedRequest {
  
}

message IsLockedResponse {
  bool locked = 1;
}


message RequestUnlockRequest {
  string aid = 1;
}

message RequestUnlockResponse {
  bool success = 1;
}


message HideSoftKeyboardRequest {
  string aid = 1;
}

message HideSoftKeyboardResponse {
  bool success = 1;
}




// View creation methods

message CreateLinearLayoutRequest {
  Create data = 1;
  bool horizontal = 2;
}

message CreateLinearLayoutResponse {
  int32 id = 1;
}


message CreateFrameLayoutRequest {
  Create data = 1;
}

message CreateFrameLayoutResponse {
  int32 id = 1;
}


message CreateSwipeRefreshLayoutRequest {
  Create data = 1;
}

message CreateSwipeRefreshLayoutResponse {
  int32 id = 1;
}


message CreateTextViewRequest {
  Create data = 1;
  string text = 2;
  bool selectableText = 3;
  bool clickableLinks = 4;
}

message CreateTextViewResponse {
  int32 id = 1;
}


message CreateEditTextRequest {
  Create data = 1;
  bool noline = 2;
  bool blockinput = 3;
  enum Type {
    text = 0;
    textMultiLine = 1;
    phone = 3;
    date = 4;
    time = 5;
    datetime = 6;
    number = 7;
    numberDecimal = 8;
    numberPassword = 9;
    numberSigned = 10;
    numberDecimalSigned = 11;
    textEmailAddress = 12;
    textPassword = 13;
  }
  Type type = 4;
  string txt = 5;
}

message CreateEditTextResponse {
  int32 id = 1;
}


message CreateButtonRequest {
  Create data = 1;
  string text = 2;
}

message CreateButtonResponse {
  int32 id = 1;
}


message CreateImageViewRequest {
  Create data = 1;
}

message CreateImageViewResponse {
  int32 id = 1;
}


message CreateSpaceRequest {
  Create data = 1;
}

message CreateSpaceResponse {
  int32 id = 1;
}


message CreateNestedScrollViewRequest {
  Create data = 1;
  bool snapping = 2;
  bool nobar = 3;
  bool fillViewport = 4;
}

message CreateNestedScrollViewResponse {
  int32 id = 1;
}


message CreateHorizontalScrollViewRequest {
  Create data = 1;
  bool snapping = 2;
  bool nobar = 3;
  bool fillViewPort = 4;
}

message CreateHorizontalScrollViewResponse {
  int32 id = 1;
}


message CreateRadioButtonRequest {
  Create data = 1;
  string text = 2;
  bool checked = 3;
}

message CreateRadioButtonResponse {
  int32 id = 1;
}


message CreateRadioGroupRequest {
  Create data = 1;
}

message CreateRadioGroupResponse {
  int32 id = 1;
}


message CreateCheckboxRequest {
  Create data = 1;
  string text = 2;
  bool checked = 3;
}

message CreateCheckboxResponse {
  int32 id = 1;
}


message CreateToggleButtonRequest {
  Create data = 1;
  bool checked = 2;
}

message CreateToggleButtonResponse {
  int32 id = 1;
}


message CreateSwitchRequest {
  Create data = 1;
  string text = 2;
  bool checked = 3;
}

message CreateSwitchResponse {
  int32 id = 1;
}


message CreateSpinnerRequest {
  Create data = 1;
}

message CreateSpinnerResponse {
  int32 id = 1;
}


message CreateProgressBarRequest {
  Create data = 1;
}

message CreateProgressBarResponse {
  int32 id = 1;
}


message CreateTabLayoutRequest {
  Create data = 1;
}

message CreateTabLayoutResponse {
  int32 id = 1;
}




// View manipulation methods





// RemoteViews methods





// WebView methods





// Event control methods








message Method {
  oneof method {
    // Activity, Task and global methods
    NewActivityRequest newActivity = 16;
    FinishActivityRequest finishActivity = 17;
    FinishTaskRequest finishTask = 18;
    BringTaskToFrontRequest bringTaskToFront = 19;
    MoveTaskToBackRequest moveTaskToBack = 20;
    SetThemeRequest setTheme = 21;
    SetTaskDescriptionRequest setTaskDescription = 22;
    SetPiPParamsRequest setPiPParams = 23;
    SetInputModeRequest setInputMode = 24;
    SetPiPModeRequest setPiPMode = 25;
    SetPiPModeAutoRequest setPiPModeAuto = 26;
    ToastRequest toast = 27;
    KeepScreenOnRequest keepScreenOn = 28;
    SetOrientationRequest setOrientation = 29;
    SetPositionRequest setPosition = 30;
    GetConfigurationRequest getConfiguration = 31;
    TurnScreenOnRequest turnScreenOn = 32;
    IsLockedRequest isLocked = 33;
    RequestUnlockRequest requestUnlock = 34;
    HideSoftKeyboardRequest hideSoftKeyboard = 35;

    // View creation methods
    CreateLinearLayoutRequest createLinearLayout = 36;
    CreateFrameLayoutRequest createFrameLayout = 37;
    CreateSwipeRefreshLayoutRequest createSwipeRefreshLayout = 38;
    CreateTextViewRequest createTextView = 39;
    CreateEditTextRequest createEditText = 40;
    CreateButtonRequest createButton = 41;
    CreateImageViewRequest createImageView = 42;
    CreateSpaceRequest createSpace = 43;
    CreateNestedScrollViewRequest createNestedScrollView = 44;
    CreateHorizontalScrollViewRequest createHorizontalScrollView = 45;
    CreateRadioGroupRequest createRadioGroup = 46;
    CreateRadioButtonRequest createRadioButton = 47;
    CreateCheckboxRequest createCheckbox = 48;
    CreateToggleButtonRequest createToggleButton = 49;
    CreateSwitchRequest createSwitch = 50;
    CreateSpinnerRequest createSpinner = 51;
    CreateProgressBarRequest createProgressBar = 52;
    CreateTabLayoutRequest createTabLayout = 53;
    
    
  }
}





// Event types



message CreateEvent {
  string aid = 1;
}

message StartEvent {
  string aid = 1;
}

message ResumeEvent {
  string aid = 1;
}

message PauseEvent {
  string aid = 1;
  bool finishing = 2;
}

message StopEvent {
  string aid = 1;
  bool finishing = 2;
}

message DestroyEvent {
  string aid = 1;
  bool finishing = 2;
}

message ConfigEvent {
  string aid = 1;
  Configuration configuration = 2;
}

message ClickEvent {
  string aid = 1;
  string id = 2;
  int32 x = 3;
  int32 y = 4;
  bool set = 5;
}

message LongClickEvent {
  string aid = 1;
  string id = 2;
}

message FocusChangeEvent {
  string aid = 1;
  string id = 2;
  bool focus = 3;
}

message TouchEvent {
  string aid = 1;
  string id = 2;
  // TODO finish touch event data
  message Touch {
    int32 x = 1;
    int32 y = 2;
  }
  repeated Touch touches = 3;
}

message TextEvent {
  string aid = 1;
  string id = 2;
}

message RefreshEvent {
  string aid = 1;
  string id = 2;
}

message SelectedEvent {
  string aid = 1;
  string id = 2;
  string selected = 3;
}

message ItemSelectedEvent {
  string aid = 1;
  string id = 2;
  string selected = 3;
}

message AirplaneEvent {
  bool active = 1;
}

message LocaleEvent {
  string locale = 1;
}

message TimezoneEvent {
  string tz = 1;
}

message ScreenOffEvent {
  
}

message ScreenOnEvent {
  
}

message UserLeaveHintEvent {
  string aid = 1;
}

message PiPChangedEvent {
  string aid = 1;
  bool pip = 2;
}

message Event {
  oneof event {
    ClickEvent click = 1;
    TouchEvent touch = 2;
    TextEvent text = 3;
    CreateEvent create = 16;
    StartEvent start = 17;
    ResumeEvent resume = 18;
    PauseEvent pause = 19;
    StopEvent stop = 20;
    DestroyEvent destroy = 21;
    ConfigEvent config = 22;
    LongClickEvent longClick = 23;
    FocusChangeEvent focusChange = 24;
    RefreshEvent refresh = 26;
    SelectedEvent selected = 27;
    ItemSelectedEvent itemSelected = 28;
    AirplaneEvent airplane = 29;
    LocaleEvent locale = 30;
    TimezoneEvent timezone = 31;
    ScreenOffEvent screenOff = 32;
    ScreenOnEvent screenOn = 33;
    UserLeaveHintEvent userLeaveHint = 34;
    PiPChangedEvent pip = 35;
  }
}








