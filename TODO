

[ ] add events to a queue to send them in a background thread per connection, so the ui thread doesn't block when the program doesn't read the events


[ ] implement the rest of the already specified methods

[ ] save the view state with saveinstancestate and restore it after a configuration change, so that the views don't have references to the old activity
[ ] ability to make ImageView focusable, so the virtual keyboard gets activated when it is tapped and you can receive keyevents. That enables you to create custom views.


[ ] screen wakelock to keep the screen on
[ ] Activity lifecycle events
[ ] support for locking orientation: Activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LOCKED);
[ ] PiP events (enter/exit, onUserLeaveHint), entering and exiting pip manually via setPiPMode
[ ] system overlay window support
[ ] Action Bar with elements
[ ] App widgets
    [ ] only 1 depth layouts, because the IDs can't be changed
        [ ] or have 10 different layout files for each view type with 10 different ids, that allows a bit of nesting
            [ ] 5 for Layouts, 10 for textview and button, 5 for progress bar
            [ ] But the main dynamic content should be made with collections: https://developer.android.com/guide/topics/appwidgets/collections
    [ ] support for using layouts in widgets (if parent != null, use R.id.remoteview as parent)
[ ] Notifications with custom Layout
[ ] method to get the screen resolution, to change layout if needed
[ ] on screen orientation change event
[ ] support for divider between elements in LinearLayouts an RecyclerViews
[ ] Gesture events
[ ] Multitouch
[ ] setting visibility to hidden or gone
[ ] method to check dark mode and other configuration variables
[ ] register dynamic broadcast receivers for things like language chance, airplane mode and other useful events and relay them to the program
    - ACTION_AIRPLANE_MODE_CHANGED
    - ACTION_BATTERY_LOW
    - ACTION_BATTERY_OKAY
    - ACTION_DEVICE_STORAGE_LOW
    - ACTION_DEVICE_STORAGE_OK
    - ACTION_LOCALE_CHANGED
    - ACTION_BATTERY_CHANGED
    - ACTION_SCREEN_OFF
    - ACTION_SCREEN_ON
    - ACTION_TIMEZONE_CHANGED
[ ] setting explicit size for views
[ ] setting ImageView size in px, so it can be exactly the size of the bitmap buffer 
[ ] or query the current size of the ImageView to use a new buffer
[ ] Toasts




[ ] finish Python bindings when the plugin is available on f-droid and upload them to pypi

Implement Views:
[ ] password field (method for EditText to replace every displayed character with *)
[ ] RelativeLayout
[x] FrameLayout
[x] Button
[x] ImageView
[x] Space
[x] NestedScrollView
[ ] RecyclerView
    [ ] use the paging library to get good performance. When a new page is needed, send an event to the program.
        Then the program has to send back a list of json layouts to populate the view.
        To update existing items, the program can send a page unrequested.
[ ] RadioButton
[ ] RadioGroup
[x] Checkbox
[ ] ToggleButton
[ ] ImageButton
[ ] Spinner
[ ] SwipeRefreshLayout
[ ] GridLayout
[ ] ProgressBar
[ ] ViewPager2
[ ] CardLayout
[ ] TabLayout
[ ] Tab
[ ] WebView


Implement Events:
[ ] Methods to set and unset Listeners
[x] Click
[ ] LongClick
[ ] FocusChange
[ ] Key
[ ] Touch
[ ] Refresh (SwipeRefreshLayout)
[ ] 



